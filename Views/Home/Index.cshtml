@model List<MovieLibrary.Models.Movie>
@{
    ViewBag.Title = "Movie Library";
}

<div class="container mt-3">

    <h1 class="mb-4">Personal Movie Library</h1>

    <!-- Alert messages -->
    @if (TempData["Message"] != null)
    {
        <div class="alert alert-success">@TempData["Message"]</div>
    }

    <!-- Filter and Sort -->
    <form method="get" class="row mb-4 g-2 align-items-center">
        <div class="col-sm-6 col-md-4">
            <input type="text" name="filter" value="@ViewBag.Filter" placeholder="Search by title..." class="form-control" />
        </div>
        <div class="col-sm-4 col-md-3">
            <select name="sortBy" class="form-select">
                <option value="" @(string.IsNullOrEmpty(ViewBag.SortBy) ? "selected" : "")>Sort By</option>
                <option value="title" @(ViewBag.SortBy == "title" ? "selected" : "")>Title (A-Z)</option>
                <option value="rating" @(ViewBag.SortBy == "rating" ? "selected" : "")>Rating (High to Low)</option>
            </select>
        </div>
        <div class="col-auto">
            <button type="submit" class="btn btn-warning">Apply</button>
        </div>
    </form>

    <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4">

        @foreach (var movie in Model)
        {
            var inWatchlist = ((List<string>)ViewBag.Watchlist).Contains(movie.Title);
            <div class="col">
                <div class="card h-100 shadow-sm">
                    <img src="@Url.Content("~/Movies/" + movie.FileName)" alt="@movie.Title" class="card-img-top" />
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title text-warning mb-1">@movie.Title</h5>
                        <p class="card-genre text-secondary mb-2">@movie.Genre</p>

                        <div class="star-rating mb-2" title="Average rating">
                            @{
                                var avg = Math.Round(movie.AverageRating);
                                for (int i = 1; i <= 5; i++)
                                {
                                    var starClass = i <= avg ? "fas" : "far";
                                    <i class="@starClass fa-star"></i>
                                }
                            }
                            <span class="text-muted ms-2">@movie.AverageRating.ToString("0.0")/5</span>
                        </div>

                        <a href="@Url.Action("Details", "Home", new { title = movie.Title })" class="btn btn-outline-warning mt-auto mb-2">Details</a>

                        <form method="post" action="@Url.Action(inWatchlist ? "RemoveFromWatchlist" : "AddToWatchlist", "Home")" class="d-grid">
                            <input type="hidden" name="title" value="@movie.Title" />
                            <button type="submit" class="btn @(inWatchlist ? "btn-danger" : "btn-warning")">
                                @(inWatchlist ? "Remove from Watchlist" : "Add to Watchlist")
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section scripts {
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
}
